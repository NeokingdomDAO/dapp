/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

import type {
  ResolutionManagerBase,
  ResolutionManagerBaseInterface,
} from "../../../contracts/ResolutionManager/ResolutionManagerBase";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "resolutionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DelegateLostVotingPower",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "resolutionId",
        type: "uint256",
      },
    ],
    name: "ResolutionApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "resolutionId",
        type: "uint256",
      },
    ],
    name: "ResolutionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "resolutionId",
        type: "uint256",
      },
    ],
    name: "ResolutionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "resolutionId",
        type: "uint256",
      },
    ],
    name: "ResolutionRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "typeIndex",
        type: "uint256",
      },
    ],
    name: "ResolutionTypeCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "resolutionId",
        type: "uint256",
      },
    ],
    name: "ResolutionUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "resolutionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "votingPower",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isYes",
        type: "bool",
      },
    ],
    name: "ResolutionVoted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "resolutionId",
        type: "uint256",
      },
    ],
    name: "getExecutionDetails",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "resolutionId",
        type: "uint256",
      },
    ],
    name: "getResolutionResult",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "resolutionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "getVoterVote",
    outputs: [
      {
        internalType: "bool",
        name: "isYes",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "hasVoted",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "votingPower",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "resolutionTypes",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "quorum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "noticePeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingPeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "canBeNegative",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "resolutions",
    outputs: [
      {
        internalType: "string",
        name: "dataURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "resolutionTypeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "approveTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yesVotesTotal",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isNegative",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "rejectionTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executionTimestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "addressedContributor",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ResolutionManagerBase__factory {
  static readonly abi = _abi;
  static createInterface(): ResolutionManagerBaseInterface {
    return new utils.Interface(_abi) as ResolutionManagerBaseInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ResolutionManagerBase {
    return new Contract(address, _abi, signerOrProvider) as ResolutionManagerBase;
  }
}
