/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

import type { HasRole, HasRoleInterface } from "../../../contracts/extensions/HasRole";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "getRoles",
    outputs: [
      {
        internalType: "contract DAORoles",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DAORoles",
        name: "roles",
        type: "address",
      },
    ],
    name: "setRoles",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class HasRole__factory {
  static readonly abi = _abi;
  static createInterface(): HasRoleInterface {
    return new utils.Interface(_abi) as HasRoleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): HasRole {
    return new Contract(address, _abi, signerOrProvider) as HasRole;
  }
}
