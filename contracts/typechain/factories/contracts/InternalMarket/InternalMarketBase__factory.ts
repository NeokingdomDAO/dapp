/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";

import type { PromiseOrValue } from "../../../common";
import type {
  InternalMarketBase,
  InternalMarketBaseInterface,
} from "../../../contracts/InternalMarket/InternalMarketBase";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "id",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    name: "OfferCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "id",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "OfferMatched",
    type: "event",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offerDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "offeredBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawableBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405262093a8060015534801561001757600080fd5b50610267806100276000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633aa6c4f914610051578063785e9e8614610077578063bd62869a146100a2578063cfe63ddf146100ab575b600080fd5b61006461005f366004610196565b6100be565b6040519081526020015b60405180910390f35b60005461008a906001600160a01b031681565b6040516001600160a01b03909116815260200161006e565b61006460015481565b6100646100b9366004610196565b6100d2565b6000806100ca836100e6565b949350505050565b6000806100de836100e6565b509392505050565b6001600160a01b0381166000908152600260209081526040808320600390925282205481548392919083906001600160801b03165b83546001600160801b03600160801b90910481169082161015610180576001600160801b03811660009081526001850160205260409020805442111561016d57600181015461016a90846101dc565b92505b5080610178816101f4565b91505061011b565b5061018b818361021a565b969095509350505050565b6000602082840312156101a857600080fd5b81356001600160a01b03811681146101bf57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156101ef576101ef6101c6565b500190565b60006001600160801b03808316818103610210576102106101c6565b6001019392505050565b60008282101561022c5761022c6101c6565b50039056fea264697066735822122020643b0bd8faa5342ab1057da30e976467c73ecdd134a1759e248fdaf74aed0064736f6c634300080f0033";

type InternalMarketBaseConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: InternalMarketBaseConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class InternalMarketBase__factory extends ContractFactory {
  constructor(...args: InternalMarketBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<InternalMarketBase> {
    return super.deploy(overrides || {}) as Promise<InternalMarketBase>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InternalMarketBase {
    return super.attach(address) as InternalMarketBase;
  }
  override connect(signer: Signer): InternalMarketBase__factory {
    return super.connect(signer) as InternalMarketBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InternalMarketBaseInterface {
    return new utils.Interface(_abi) as InternalMarketBaseInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): InternalMarketBase {
    return new Contract(address, _abi, signerOrProvider) as InternalMarketBase;
  }
}
