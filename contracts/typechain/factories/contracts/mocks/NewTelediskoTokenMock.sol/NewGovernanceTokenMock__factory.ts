/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";

import type { PromiseOrValue } from "../../../../common";
import type {
  NewGovernanceTokenMock,
  NewGovernanceTokenMockInterface,
} from "../../../../contracts/mocks/NewTelediskoTokenMock.sol/NewGovernanceTokenMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "VestingSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "VestingSet2",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentSnapshotId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRoles",
    outputs: [
      {
        internalType: "contract DAORoles",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DAORoles",
        name: "roles",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintVesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRedemptionController",
        name: "redemption",
        type: "address",
      },
    ],
    name: "setRedemptionController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DAORoles",
        name: "roles",
        type: "address",
      },
    ],
    name: "setRoles",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenExternalAddress",
        type: "address",
      },
    ],
    name: "setTokenExternal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setVesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVoting",
        name: "voting",
        type: "address",
      },
    ],
    name: "setVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "snapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenExternal",
    outputs: [
      {
        internalType: "contract INeokingdomToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "vestingBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b806200004f5750303b1580156200004f575060005460ff166001145b620000b75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015620000db576000805461ff0019166101001790555b801562000122576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506124fa80620001336000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638cc7104f116101045780639dc29fac116100a2578063bf414ee311610071578063bf414ee3146103e4578063c4d07951146103f7578063dd62ed3e1461040a578063fd1e41271461041d57600080fd5b80639dc29fac14610398578063a457c2d7146103ab578063a9059cbb146103be578063bf376c7a146103d157600080fd5b806396c9ee62116100de57806396c9ee62146103575780639711715a1461036a578063981b24d0146103725780639b04e88d1461038557600080fd5b80638cc7104f14610329578063906571471461033c57806395d89b411461034f57600080fd5b806339509351116101715780634ee2cd7e1161014b5780634ee2cd7e146102c05780635439ad86146102d357806370a08231146102db578063710613981461030457600080fd5b8063395093511461028757806340c10f191461029a57806344292600146102ad57600080fd5b806318160ddd116101ad57806318160ddd1461022a57806323b872dd1461023c578063313ce5671461024f57806336ca03651461025e57600080fd5b806306fdde03146101d457806309031db6146101f2578063095ea7b314610207575b600080fd5b6101dc610430565b6040516101e99190611f7b565b60405180910390f35b610205610200366004611fc3565b6104c2565b005b61021a610215366004611fe0565b6105b1565b60405190151581526020016101e9565b6036545b6040519081526020016101e9565b61021a61024a36600461200c565b6105cb565b604051601281526020016101e9565b61022e61026c366004611fc3565b6001600160a01b031660009081526069602052604090205490565b61021a610295366004611fe0565b610677565b6102056102a8366004611fe0565b610699565b6102056102bb366004611fe0565b610751565b61022e6102ce366004611fe0565b61079e565b606a5461022e565b61022e6102e9366004611fc3565b6001600160a01b031660009081526034602052604090205490565b6033546001600160a01b03165b6040516001600160a01b0390911681526020016101e9565b61020561033736600461200c565b6107f7565b61020561034a3660046120f0565b61089f565b6101dc6109bd565b610205610365366004611fe0565b6109cc565b61022e610a6c565b61022e610380366004612166565b610b24565b610205610393366004611fc3565b610b4f565b6102056103a6366004611fe0565b610c05565b61021a6103b9366004611fe0565b610ca5565b61021a6103cc366004611fe0565b610d2b565b6102056103df366004611fe0565b610dcc565b606854610311906001600160a01b031681565b610205610405366004611fc3565b610e6c565b61022e61041836600461217f565b610f22565b61020561042b366004611fc3565b610f4d565b60606037805461043f906121b8565b80601f016020809104026020016040519081016040528092919081815260200182805461046b906121b8565b80156104b85780601f1061048d576101008083540402835291602001916104b8565b820191906000526020600020905b81548152906001019060200180831161049b57829003601f168201915b5050505050905090565b6000805160206124a5833981519152600033603354604051632474521560e21b8152600481018590526001600160a01b0380841660248301529293509116906391d1485490604401602060405180830381865afa158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b91906121f2565b6105a35761055881611003565b610563836020611015565b604051602001610574929190612214565b60408051601f198184030181529082905262461bcd60e51b825261059a91600401611f7b565b60405180910390fd5b6105ac836111b8565b505050565b6000336105bf8185856111da565b60019150505b92915050565b60006000805160206124858339815191528133603354604051632474521560e21b8152600481018590526001600160a01b0380841660248301529293509116906391d1485490604401602060405180830381865afa158015610631573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065591906121f2565b6106625761055881611003565b61066d8686866112fe565b9695505050505050565b6000336105bf81858561068a8383610f22565b610694919061229f565b6111da565b7f7b97752341782019d21e7c1027eedcd270e56f5b672dcc28d53bf58a346002fc600033603354604051632474521560e21b8152600481018590526001600160a01b0380841660248301529293509116906391d1485490604401602060405180830381865afa158015610710573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073491906121f2565b6107415761055881611003565b61074b8484611317565b50505050565b604080513381526001600160a01b03841660208201529081018290527f271a481a64d7d12f6e8b5b7e6dc43276c1c110e67b5848965dd821ac240879169060600160405180910390a15050565b6001600160a01b0382166000908152606b60205260408120819081906107c5908590611389565b91509150816107ec576001600160a01b0385166000908152603460205260409020546107ee565b805b95945050505050565b600080516020612485833981519152600033603354604051632474521560e21b8152600481018590526001600160a01b0380841660248301529293509116906391d1485490604401602060405180830381865afa15801561085c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088091906121f2565b61088d5761055881611003565b6108988585856113cd565b5050505050565b600054610100900460ff16158080156108bf5750600054600160ff909116105b806108d95750303b1580156108d9575060005460ff166001145b61093c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161059a565b6000805460ff19166001179055801561095f576000805461ff0019166101001790555b610969838361144f565b610972846111b8565b801561074b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b60606038805461043f906121b8565b6000805160206124a5833981519152600033603354604051632474521560e21b8152600481018590526001600160a01b0380841660248301529293509116906391d1485490604401602060405180830381865afa158015610a31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5591906121f2565b610a625761055881611003565b61074b8484611459565b60007f7b97752341782019d21e7c1027eedcd270e56f5b672dcc28d53bf58a346002fc8133603354604051632474521560e21b8152600481018590526001600160a01b0380841660248301529293509116906391d1485490604401602060405180830381865afa158015610ae4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0891906121f2565b610b155761055881611003565b610b1d611535565b9250505090565b6000806000610b3484606c611389565b9150915081610b4557603654610b47565b805b949350505050565b6000805160206124a5833981519152600033603354604051632474521560e21b8152600481018590526001600160a01b0380841660248301529293509116906391d1485490604401602060405180830381865afa158015610bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd891906121f2565b610be55761055881611003565b606780546001600160a01b0319166001600160a01b038516179055505050565b600080516020612485833981519152600033603354604051632474521560e21b8152600481018590526001600160a01b0380841660248301529293509116906391d1485490604401602060405180830381865afa158015610c6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8e91906121f2565b610c9b5761055881611003565b61074b8484611578565b60003381610cb38286610f22565b905083811015610d135760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161059a565b610d2082868684036111da565b506001949350505050565b60006000805160206124858339815191528133603354604051632474521560e21b8152600481018590526001600160a01b0380841660248301529293509116906391d1485490604401602060405180830381865afa158015610d91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db591906121f2565b610dc25761055881611003565b6107ee85856115e0565b600080516020612485833981519152600033603354604051632474521560e21b8152600481018590526001600160a01b0380841660248301529293509116906391d1485490604401602060405180830381865afa158015610e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5591906121f2565b610e625761055881611003565b61074b84846115ee565b6000805160206124a5833981519152600033603354604051632474521560e21b8152600481018590526001600160a01b0380841660248301529293509116906391d1485490604401602060405180830381865afa158015610ed1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef591906121f2565b610f025761055881611003565b606680546001600160a01b0319166001600160a01b038516179055505050565b6001600160a01b03918216600090815260356020908152604080832093909416825291909152205490565b6000805160206124a5833981519152600033603354604051632474521560e21b8152600481018590526001600160a01b0380841660248301529293509116906391d1485490604401602060405180830381865afa158015610fb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd691906121f2565b610fe35761055881611003565b606880546001600160a01b0319166001600160a01b038516179055505050565b60606105c56001600160a01b03831660145b606060006110248360026122b2565b61102f90600261229f565b67ffffffffffffffff8111156110475761104761204d565b6040519080825280601f01601f191660200182016040528015611071576020820181803683370190505b509050600360fc1b8160008151811061108c5761108c6122c9565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106110bb576110bb6122c9565b60200101906001600160f81b031916908160001a90535060006110df8460026122b2565b6110ea90600161229f565b90505b6001811115611162576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061111e5761111e6122c9565b1a60f81b828281518110611134576111346122c9565b60200101906001600160f81b031916908160001a90535060049490941c9361115b816122df565b90506110ed565b5083156111b15760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161059a565b9392505050565b603380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03831661123c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161059a565b6001600160a01b03821661129d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161059a565b6001600160a01b0383811660008181526035602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60003361130c858285611676565b610d208585856116ea565b6068546040516340c10f1960e01b8152306004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561136357600080fd5b505af1158015611377573d6000803e3d6000fd5b5050505061138582826118a6565b5050565b60008080611397858561197b565b909350905082156113c5578360010181815481106113b7576113b76122c9565b906000526020600020015491505b509250929050565b60685460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015611420573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144491906121f2565b506105ac8382611a49565b6113858282611b90565b6001600160a01b03821660009081526069602052604090205481106114d75760405162461bcd60e51b815260206004820152602e60248201527f476f7665726e616e6365546f6b656e3a2076657374696e672063616e206f6e6c60448201526d1e48189948191958dc99585cd95960921b606482015260840161059a565b604080516001600160a01b0384168152602081018390527f90782417eb6da69d0b671119cc8e9c2063c7b0987ef1378141a54770a8c91fb3910160405180910390a16001600160a01b03909116600090815260696020526040902055565b42606a8190556040519081526000907f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb679060200160405180910390a150606a5490565b606854604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b1580156115be57600080fd5b505af11580156115d2573d6000803e3d6000fd5b505050506113858282611a49565b6000336105bf8185856116ea565b6068546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201849052909116906323b872dd906064016020604051808303816000875af1158015611647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166b91906121f2565b5061138582826118a6565b60006116828484610f22565b9050600019811461074b57818110156116dd5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161059a565b61074b84848484036111da565b6001600160a01b03831661174e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161059a565b6001600160a01b0382166117b05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161059a565b6117bb838383611bc1565b6001600160a01b038316600090815260346020526040902054818110156118335760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161059a565b6001600160a01b0380851660008181526034602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906118939086815260200190565b60405180910390a361074b848484611c09565b6001600160a01b0382166118fc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161059a565b61190860008383611bc1565b806036600082825461191a919061229f565b90915550506001600160a01b0382166000818152603460209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361138560008383611c09565b600080600084116119c75760405162461bcd60e51b81526020600482015260166024820152750536e617073686f747461626c653a20696420697320360541b604482015260640161059a565b606a54841115611a195760405162461bcd60e51b815260206004820152601d60248201527f536e617073686f747461626c653a206e6f6e6578697374656e74206964000000604482015260640161059a565b6000611a258486611d79565b84549091508103611a3b57600092509050611a42565b6001925090505b9250929050565b6001600160a01b038216611aa95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161059a565b611ab582600083611bc1565b6001600160a01b03821660009081526034602052604090205481811015611b295760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161059a565b6001600160a01b03831660008181526034602090815260408083208686039055603680548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105ac83600084611c09565b600054610100900460ff16611bb75760405162461bcd60e51b815260040161059a906122f6565b6113858282611e26565b6001600160a01b038316611be057611bd882611e66565b6105ac611e9c565b6001600160a01b038216611bf757611bd883611e66565b611c0083611e66565b6105ac82611e66565b606654604051636fb12c5f60e11b81526001600160a01b0385811660048301528481166024830152604482018490529091169063df6258be90606401600060405180830381600087803b158015611c5f57600080fd5b505af1158015611c73573d6000803e3d6000fd5b5050506001600160a01b0384169050611ced5760675460405163228bea5360e21b81526001600160a01b0384811660048301526024820184905290911690638a2fa94c90604401600060405180830381600087803b158015611cd457600080fd5b505af1158015611ce8573d6000803e3d6000fd5b505050505b6001600160a01b03831660009081526069602090815260408083205460349092529091205410156105ac5760405162461bcd60e51b815260206004820152603060248201527f476f7665726e616e6365546f6b656e3a207472616e7366657220616d6f756e7460448201526f20657863656564732076657374696e6760801b606482015260840161059a565b81546000908103611d8c575060006105c5565b82546000905b80821015611dd9576000611da68383611eac565b60008781526020902090915085908201541115611dc557809150611dd3565b611dd081600161229f565b92505b50611d92565b600082118015611e05575083611e0286611df4600186612341565b600091825260209091200190565b54145b15611e1e57611e15600183612341565b925050506105c5565b5090506105c5565b600054610100900460ff16611e4d5760405162461bcd60e51b815260040161059a906122f6565b6037611e5983826123a2565b5060386105ac82826123a2565b6001600160a01b0381166000908152606b60209081526040808320603490925290912054611e999190611ec7565b611ec7565b50565b611eaa606c611e9460365490565b565b6000611ebb6002848418612462565b6111b19084841661229f565b6000611ed2606a5490565b905080611ede84611f12565b10156105ac578254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b80546000908103611f2557506000919050565b81548290611f3590600190612341565b81548110611f4557611f456122c9565b90600052602060002001549050919050565b60005b83811015611f72578181015183820152602001611f5a565b50506000910152565b6020815260008251806020840152611f9a816040850160208701611f57565b601f01601f19169190910160400192915050565b6001600160a01b0381168114611e9957600080fd5b600060208284031215611fd557600080fd5b81356111b181611fae565b60008060408385031215611ff357600080fd5b8235611ffe81611fae565b946020939093013593505050565b60008060006060848603121561202157600080fd5b833561202c81611fae565b9250602084013561203c81611fae565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261207457600080fd5b813567ffffffffffffffff8082111561208f5761208f61204d565b604051601f8301601f19908116603f011681019082821181831017156120b7576120b761204d565b816040528381528660208588010111156120d057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561210557600080fd5b833561211081611fae565b9250602084013567ffffffffffffffff8082111561212d57600080fd5b61213987838801612063565b9350604086013591508082111561214f57600080fd5b5061215c86828701612063565b9150509250925092565b60006020828403121561217857600080fd5b5035919050565b6000806040838503121561219257600080fd5b823561219d81611fae565b915060208301356121ad81611fae565b809150509250929050565b600181811c908216806121cc57607f821691505b6020821081036121ec57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561220457600080fd5b815180151581146111b157600080fd5b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161224c816017850160208801611f57565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161227d816028840160208801611f57565b01602801949350505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156105c5576105c5612289565b80820281158282048414176105c5576105c5612289565b634e487b7160e01b600052603260045260246000fd5b6000816122ee576122ee612289565b506000190190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b818103818111156105c5576105c5612289565b601f8211156105ac57600081815260208120601f850160051c8101602086101561237b5750805b601f850160051c820191505b8181101561239a57828155600101612387565b505050505050565b815167ffffffffffffffff8111156123bc576123bc61204d565b6123d0816123ca84546121b8565b84612354565b602080601f83116001811461240557600084156123ed5750858301515b600019600386901b1c1916600185901b17855561239a565b600085815260208120601f198616915b8281101561243457888601518255948401946001909101908401612415565b50858210156124525787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008261247f57634e487b7160e01b600052601260045260246000fd5b50049056fe395f08be531c0d7403cba7c5ffd2b57329184452bcebcd6a48299ebbbf39db6f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929a264697066735822122017e2917524587c50cff9c5c77020d18073a6257ca3e14bcb466f686b531c049d64736f6c63430008130033";

type NewGovernanceTokenMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NewGovernanceTokenMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NewGovernanceTokenMock__factory extends ContractFactory {
  constructor(...args: NewGovernanceTokenMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<NewGovernanceTokenMock> {
    return super.deploy(overrides || {}) as Promise<NewGovernanceTokenMock>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NewGovernanceTokenMock {
    return super.attach(address) as NewGovernanceTokenMock;
  }
  override connect(signer: Signer): NewGovernanceTokenMock__factory {
    return super.connect(signer) as NewGovernanceTokenMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NewGovernanceTokenMockInterface {
    return new utils.Interface(_abi) as NewGovernanceTokenMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NewGovernanceTokenMock {
    return new Contract(address, _abi, signerOrProvider) as NewGovernanceTokenMock;
  }
}
