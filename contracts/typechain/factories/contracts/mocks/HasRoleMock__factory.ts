/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";

import type { PromiseOrValue } from "../../../common";
import type { HasRoleMock, HasRoleMockInterface } from "../../../contracts/mocks/HasRoleMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "checkOnlyRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRoles",
    outputs: [
      {
        internalType: "contract DAORoles",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DAORoles",
        name: "roles",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DAORoles",
        name: "roles",
        type: "address",
      },
    ],
    name: "setRoles",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff16158080156100315750600054600160ff909116105b8061004b5750303b15801561004b575060005460ff166001145b6100b25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff1916600117905580156100d5576000805461ff0019166101001790555b801561011b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506107118061012b6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309031db614610051578063509d91e7146100665780637106139814610079578063c4d66de814610098575b600080fd5b61006461005f366004610528565b6100ab565b005b610064610074366004610551565b6101ac565b603354604080516001600160a01b039092168252519081900360200190f35b6100646100a6366004610528565b610234565b7f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929600033603354604051632474521560e21b8152600481018590526001600160a01b0380841660248301529293509116906391d1485490604401602060405180830381865afa158015610122573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610146919061056a565b61019e5761015381610347565b61015e836020610363565b60405160200161016f9291906105b0565b60408051601f198184030181529082905262461bcd60e51b825261019591600401610625565b60405180910390fd5b6101a783610506565b505050565b80600033603354604051632474521560e21b8152600481018590526001600160a01b0380841660248301529293509116906391d1485490604401602060405180830381865afa158015610203573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610227919061056a565b6101a75761015381610347565b600054610100900460ff16158080156102545750600054600160ff909116105b8061026e5750303b15801561026e575060005460ff166001145b6102d15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610195565b6000805460ff1916600117905580156102f4576000805461ff0019166101001790555b6102fd82610506565b8015610343576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b606061035d6001600160a01b0383166014610363565b92915050565b6060600061037283600261066e565b61037d906002610685565b67ffffffffffffffff81111561039557610395610698565b6040519080825280601f01601f1916602001820160405280156103bf576020820181803683370190505b509050600360fc1b816000815181106103da576103da6106ae565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610409576104096106ae565b60200101906001600160f81b031916908160001a905350600061042d84600261066e565b610438906001610685565b90505b60018111156104b0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061046c5761046c6106ae565b1a60f81b828281518110610482576104826106ae565b60200101906001600160f81b031916908160001a90535060049490941c936104a9816106c4565b905061043b565b5083156104ff5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610195565b9392505050565b603380546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561053a57600080fd5b81356001600160a01b03811681146104ff57600080fd5b60006020828403121561056357600080fd5b5035919050565b60006020828403121561057c57600080fd5b815180151581146104ff57600080fd5b60005b838110156105a757818101518382015260200161058f565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516105e881601785016020880161058c565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161061981602884016020880161058c565b01602801949350505050565b602081526000825180602084015261064481604085016020870161058c565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761035d5761035d610658565b8082018082111561035d5761035d610658565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816106d3576106d3610658565b50600019019056fea2646970667358221220ae49907b0a301b9d1b1f6167526d8bb00c95d9d48c656d630dab218f195b426d64736f6c63430008130033";

type HasRoleMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: HasRoleMockConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class HasRoleMock__factory extends ContractFactory {
  constructor(...args: HasRoleMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<HasRoleMock> {
    return super.deploy(overrides || {}) as Promise<HasRoleMock>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HasRoleMock {
    return super.attach(address) as HasRoleMock;
  }
  override connect(signer: Signer): HasRoleMock__factory {
    return super.connect(signer) as HasRoleMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HasRoleMockInterface {
    return new utils.Interface(_abi) as HasRoleMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): HasRoleMock {
    return new Contract(address, _abi, signerOrProvider) as HasRoleMock;
  }
}
